{
  "name": "@jupyterlab/repo-top",
  "version": "0.0.1",
  "private": true,
  "files": [],
  "workspaces": {
    "packages": [
      "dev_mode",
      "examples/*",
      "examples/federated/*",
      "packages/*",
      "packages/services/examples/node",
      "packages/services/examples/browser",
      "packages/services/examples/typescript-browser-with-output",
      "packages/ui-components/examples/*",
      "builder",
      "buildutils",
      "buildutils/template",
      "buildutils/test-template",
      "galata",
      "galata/extension",
      "tests",
      "tests/test-*",
      "testutils",
      "jupyterlab/tests/mock_packages/extension",
      "jupyterlab/tests/mock_packages/interop/*"
    ]
  },
  "scripts": {
    "after:publish:assets": "jlpm && npm run build:utils && node buildutils/lib/publish --skip-publish",
    "analyze": "npm run analyze:dev",
    "analyze:dev": "cd dev_mode && npm run build --analyze",
    "analyze:prod": "cd dev_mode && npm run build:prod --analyze",
    "before:build:python": "node buildutils/lib/local-repository.js publish-dists --path ./dist && node buildutils/lib/update-core-mode.js",
    "build": "npm run build:dev",
    "prebuild:all": "npm run build:utils && npm run build:builder",
    "build:all": "lerna run build:all",
    "postbuild:all": "npm run build:testutils && npm run build:galata",
    "build:builder": "cd builder && npm run build",
    "build:core": "cd jupyterlab/staging && jlpm && (jlpm dedupe || jlpm) && npm run build",
    "build:dev": "npm run integrity && npm run build:all && cd dev_mode && npm run build",
    "build:dev:prod": "npm run integrity && npm run build:all && cd dev_mode && npm run build:prod",
    "build:dev:prod:minimize": "npm run integrity && npm run build:all && cd dev_mode && npm run build:prod:minimize",
    "build:dev:prod:minimize:report": "npm run integrity && npm run build:all && cd dev_mode && npm run build:prod:minimize:report",
    "build:dev:prod:release": "npm run integrity && npm run build:all && cd dev_mode && npm run build:prod:release",
    "build:examples": "lerna run build --scope \"@jupyterlab/example-*\"",
    "build:galata": "cd galata && npm run build",
    "build:nbconvert:css": "cd packages/nbconvert-css && npm run build",
    "build:packages": "cd packages/metapackage && npm run build",
    "build:packages:scope": "lerna run build",
    "build:src": "lerna run build --scope \"@jupyterlab/!(test-|example-|application-top)*\" --concurrency 1",
    "build:test": "lerna run build:test",
    "build:test:scope": "lerna run build:test --concurrency 1",
    "build:testutils": "cd testutils && npm run build",
    "build:utils": "cd buildutils && npm run build",
    "bump:js:major": "node buildutils/lib/bump-js-major.js",
    "bumpversion": "node buildutils/lib/bumpversion.js",
    "clean": "npm run clean:dev && npm run clean:packages",
    "clean:core": "cd jupyterlab/staging && npm run clean",
    "clean:dev": "cd dev_mode && npm run clean",
    "clean:examples": "node buildutils/lib/clean-packages.js examples",
    "clean:galata": "cd galata && npm run clean",
    "clean:packages": "node buildutils/lib/clean-packages.js packages",
    "clean:slate": "python clean.py && python -m pip install -v -e .",
    "clean:src": "npm run clean",
    "clean:test": "lerna run clean --scope \"@jupyterlab/test-*\"",
    "clean:utils": "cd buildutils && npm run clean",
    "coverage": "lerna run coverage --scope \"@jupyterlab/test-*\" --stream --concurrency 1",
    "create:package": "node buildutils/lib/create-package.js",
    "create:test": "node buildutils/lib/create-test-package.js",
    "docs": "typedoc --options typedoc.js",
    "docs:init": "lerna run docs:init",
    "eslint": "eslint --ext .js,.jsx,.ts,.tsx --cache --fix .",
    "eslint:check": "eslint --ext .js,.jsx,.ts,.tsx --cache .",
    "eslint:check:typed": "eslint --config .eslintrc.typecheck.js --ext .js,.jsx,.ts,.tsx --cache .",
    "eslint:files": "eslint --fix",
    "eslint:typed": "eslint --config .eslintrc.typecheck.js --cache --ext .js,.jsx,.ts,.tsx --fix .",
    "get:dependency": "node buildutils/lib/get-dependency.js",
    "postinstall": "node scripts/ensure-buildutils.js",
    "integrity": "node scripts/ensure-buildutils.js && node buildutils/lib/ensure-repo.js",
    "lint": "jlpm && jlpm prettier && jlpm eslint && jlpm stylelint",
    "lint:check": "jlpm prettier:check && jlpm eslint:check && jlpm stylelint:check",
    "patch:release": "node buildutils/lib/patch-release.js",
    "prepare:python-release": "node buildutils/lib/prepare-python-release.js",
    "prepublish:check": "node buildutils/lib/prepublish-check.js",
    "prettier": "prettier --list-different --write \"**/*{.ts,.tsx,.js,.jsx,.css,.json,.md}\"",
    "prettier:check": "prettier --check \"**/*{.ts,.tsx,.js,.jsx,.css,.json,.md}\"",
    "prettier:files": "prettier --write",
    "publish:js": "node buildutils/lib/publish.js",
    "remove:dependency": "node buildutils/lib/remove-dependency.js",
    "remove:package": "node buildutils/lib/remove-package.js",
    "remove:sibling": "node buildutils/lib/remove-package.js",
    "stylelint": "jlpm stylelint:check --fix",
    "stylelint:check": "stylelint --cache \"{packages/*,galata}/style/**/*.css\" \"{examples/*,docs/**}/*.css\"",
    "stylelint:files": "stylelint --fix",
    "test": "lerna run test --scope \"@jupyterlab/!(galata|template)*\" --concurrency 1 --stream",
    "test:all": "lerna run test --scope \"@jupyterlab/!(galata|template)*\" --concurrency 1 --stream --no-bail",
    "test:examples": "python examples/test_examples.py",
    "test:galata": "lerna run test --scope \"@jupyterlab/galata\" --concurrency 1 --stream",
    "test:scope": "lerna run test --concurrency 1 --stream",
    "test:summary": "lerna run test --scope \"@jupyterlab/!(galata|template)*\" --parallel --no-bail | grep -Ei '.* test.*(failed|passed|total|completed|skipped)' | sort",
    "update:dependency": "node buildutils/lib/update-dependency.js --lerna",
    "watch": "python scripts/watch_dev.py",
    "watch:main": "npm run watch",
    "watch:packages": "python scripts/watch_packages.py"
  },
  "resolutions": {
    "@jupyterlab/services/ws": "8.12.0",
    "@types/react": "^18.0.26",
    "react": "^18.2.0",
    "yjs": "^13.5.40"
  },
  "dependencies": {
    "@typescript-eslint/eslint-plugin": "~5.55.0",
    "@typescript-eslint/parser": "~5.55.0",
    "eslint": "~8.36.0",
    "eslint-config-prettier": "~8.7.0",
    "eslint-plugin-jest": "~27.2.1",
    "eslint-plugin-prettier": "~4.2.1",
    "eslint-plugin-react": "~7.32.2",
    "prettier": "~2.6.0",
    "stylelint": "^14.9.1",
    "stylelint-config-prettier": "^9.0.3",
    "stylelint-config-recommended": "^8.0.0",
    "stylelint-config-standard": "^26.0.0",
    "stylelint-prettier": "^2.0.0"
  },
  "devDependencies": {
    "lerna": "^6.4.1",
    "typedoc": "~0.23.25"
  },
  "eslintIgnore": [
    "**/node_modules",
    "**/build",
    "**/lib",
    "**/mock_packages",
    "**/static",
    "**/typings",
    "**/schemas",
    "**/themes",
    "coverage",
    "*.map.js",
    "*.bundle.js",
    "dev_mode/index.js",
    "!dev_mode/static/index.out.js",
    "dev_mode/workspaces",
    "docs/_build",
    "docs/api",
    "docs/build",
    "examples/example.spec.ts",
    "examples/federated/core_package/index.template.js",
    "examples/federated/core_package/index.js",
    "examples/federated/labextensions",
    "galata/playwright-report",
    "jupyterlab/chrome-test.js",
    "jupyterlab/geckodriver",
    "jupyterlab/staging/yarn.js",
    "jupyterlab/staging/index.js",
    "jupyterlab/staging/webpack.config.js",
    "packages/extensionmanager-extension/examples/listings",
    "packages/nbconvert-css/raw.js",
    "packages/services/dist",
    "packages/ui-components/src/icon/iconimports.ts",
    "tsconfigdoc.json",
    "typedoc-theme/",
    ".idea/",
    ".history/",
    ".vscode/",
    "packages/lsp/src/_*",
    "packages/lsp/schema.js"
  ],
  "eslintConfig": {
    "env": {
      "browser": true,
      "es2021": true,
      "node": true,
      "jest/globals": true
    },
    "globals": {
      "BigInt": "readonly",
      "HTMLCollectionOf": "readonly",
      "JSX": "readonly",
      "NodeJS": "readonly",
      "RequestInit": "readonly",
      "RequestInfo": "readonly",
      "ScrollLogicalPosition": "readonly"
    },
    "root": true,
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "prettier",
      "plugin:react/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": 2018,
      "project:": "./tsconfig.eslint.json"
    },
    "plugins": ["@typescript-eslint"],
    "overrides": [
      {
        "files": ["packages/**/*.spec.ts", "testutils/**/*.spec.ts"],
        "plugins": ["jest"],
        "extends": ["plugin:jest/recommended"],
        "rules": {
          "jest/no-conditional-expect": "warn",
          "jest/valid-title": "warn",
          "jest/no-standalone-expect": [
            "error",
            {
              "additionalTestBlockFunctions": ["it"]
            }
          ]
        }
      }
    ],
    "rules": {
      "@typescript-eslint/naming-convention": [
        "error",
        {
          "selector": "interface",
          "format": ["PascalCase"],
          "custom": {
            "regex": "^I[A-Z]",
            "match": true
          }
        }
      ],
      "@typescript-eslint/no-unused-vars": ["warn", { "args": "none" }],
      "@typescript-eslint/no-use-before-define": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-non-null-assertion": "off",
      "@typescript-eslint/no-namespace": "off",
      "@typescript-eslint/interface-name-prefix": "off",
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/ban-ts-comment": ["warn", { "ts-ignore": true }],
      "@typescript-eslint/ban-types": "warn",
      "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
      "@typescript-eslint/no-var-requires": "off",
      "@typescript-eslint/no-empty-interface": "off",
      "@typescript-eslint/triple-slash-reference": "warn",
      "@typescript-eslint/no-inferrable-types": "off",
      "camelcase": [
        "error",
        {
          "allow": [
            "__webpack_public_path__",
            "__webpack_share_scopes__",
            "__webpack_init_sharing__",
            "allow_stdin",
            "allowed_extensions",
            "allowed_extensions_uris",
            "blocked_extensions",
            "blocked_extensions_uris",
            "bundles_extension",
            "cell_type",
            "check_update",
            "clear_output",
            "codemirror_mode",
            "comm_close",
            "comm_id",
            "comm_msg",
            "comm_open",
            "copy_from",
            "creation_date",
            "cursor_end",
            "cursor_pos",
            "cursor_start",
            "detail_level",
            "display_data",
            "display_id",
            "display_name",
            "embed_options",
            "execute_input",
            "execute_result",
            "execution_count",
            "execution_state",
            "extension_data",
            "extension_name",
            "file_extension",
            "help_links",
            "hist_access_type",
            "ids_only",
            "implementation_version",
            "installed_version",
            "is_allowed",
            "jlab_core",
            "jupyterlab_extensions",
            "jupyterlab_mime_extensions",
            "kernel_spec",
            "language_info",
            "last_modified",
            "last_update_date",
            "latest_version",
            "lineWrap_type",
            "msg_type",
            "msg_id",
            "msgid_plural",
            "nbconverter_exporter",
            "nbformat_minor",
            "orig_nbformat",
            "output_mimetype",
            "output_type",
            "outputs_hidden",
            "parent_header",
            "per_page",
            "pf_re",
            "pkg_type",
            "protocol_version",
            "pygments_lexer",
            "request_seq",
            "slide_type",
            "source_hidden",
            "shutdown_reply",
            "stop_on_error",
            "store_history",
            "target_name",
            "target_module",
            "UNSAFE_componentWillUpdate",
            "UNSAFE_componentWillReceiveProps",
            "user_expressions"
          ]
        }
      ],
      "id-match": ["error", "^[a-zA-Z_]+[a-zA-Z0-9_]*$"],
      "no-inner-declarations": "off",
      "no-prototype-builtins": "off",
      "no-control-regex": "warn",
      "no-undef": "warn",
      "no-case-declarations": "warn",
      "no-useless-escape": "off",
      "prefer-const": "off",
      "react/prop-types": "warn",
      "sort-imports": [
        "error",
        {
          "ignoreCase": true,
          "ignoreDeclarationSort": true,
          "ignoreMemberSort": false,
          "memberSyntaxSortOrder": ["none", "all", "multiple", "single"],
          "allowSeparatedGroups": false
        }
      ]
    },
    "settings": {
      "react": {
        "version": "detect"
      }
    }
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "none",
    "arrowParens": "avoid"
  }
}
